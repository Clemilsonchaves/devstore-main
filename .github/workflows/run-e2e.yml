name: Cypress Tests

on: push

jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Debug STORE_PATH
        run: echo "STORE_PATH is ${{ env.STORE_PATH }}"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env: 
          APP_URL: "http://localhost:3000"
          NEXT_PUBLIC_API_BASE_URL: "https://ignite-devstore-api.vercel.app"
        with:
          build: pnpm run build
          start:  pnpm start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 60

      - name: Set up API URL
        run: |
          const baseUrl = env.NEXT_PUBLIC_API_BASE_URL.replace(/['"]/g, '').replace(/\/$/, '')
          const normalizedPath = path.startsWith('/') ? path.slice(1) : path
          const url = new URL(`api/${normalizedPath}`, `${baseUrl}/`)
          echo "API URL is $url"

      - name: Search and Add to Cart
        run: |
          it('should be able to search for a product and add it to the cart', () => {
            cy.searchByQuery('moletom')

            // Aguarda o produto aparecer e estabilizar antes de clicar
            cy.get('a[href^="/product"]', { timeout: 10000 })
              .should('be.visible')
              .first()
              .should('exist') // Garante que o elemento está no DOM
              .click({ force: true }) // Força o clique mesmo se o Cypress achar que não está 100% pronto

            cy.location('pathname', { timeout: 10000 }).should('include', '/product')
            cy.contains('Adicionar ao carrinho').click()
            cy.contains('Cart (1)').should('exist')
          })

      - name: Handle Prerendering Error
        run: |
          echo "Error occurred prerendering page \"/product/camiseta-dowhile-2022\". Read more: https://nextjs.org/docs/messages/prerender-error"
          echo "TypeError: fetch failed"

